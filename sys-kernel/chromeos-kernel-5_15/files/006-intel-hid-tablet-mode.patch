Index: kernel-5_15/drivers/platform/x86/intel/hid.c
===================================================================
--- kernel-5_15.orig/drivers/platform/x86/intel/hid.c
+++ kernel-5_15/drivers/platform/x86/intel/hid.c
@@ -65,6 +65,10 @@ static const struct key_entry intel_arra
 	{ KE_IGNORE, 0xC7, { KEY_VOLUMEDOWN } },              /* Release */
 	{ KE_KEY,    0xC8, { KEY_ROTATE_LOCK_TOGGLE } },      /* Press */
 	{ KE_IGNORE, 0xC9, { KEY_ROTATE_LOCK_TOGGLE } },      /* Release */
+  { KE_SW,     0xCA, { .sw = { SW_DOCK, 1 } } },        /* Docked */
+  { KE_SW,     0xCB, { .sw = { SW_DOCK, 0 } } },        /* Undocked */
+  { KE_SW,     0xCC, { .sw = { SW_TABLET_MODE, 1 } } }, /* Tablet */
+  { KE_SW,     0xCD, { .sw = { SW_TABLET_MODE, 0 } } }, /* Laptop */
 	{ KE_KEY,    0xCE, { KEY_POWER } },                   /* Press */
 	{ KE_IGNORE, 0xCF, { KEY_POWER } },                   /* Release */
 	{ KE_END },
@@ -312,6 +316,26 @@ static int intel_hid_set_enable(struct d
 	return 0;
 }
 
+static void intel_detect_tablet_mode(struct device *device)
+{
+ struct intel_hid_priv *priv = dev_get_drvdata(device);
+ acpi_handle handle = ACPI_HANDLE(device);
+ unsigned long long tablet_mode;
+ union acpi_object *obj;
+
+ if (!priv->array)
+   return;
+
+ obj = acpi_evaluate_dsm(handle, &intel_dsm_guid, 1, INTEL_HID_DSM_VGBS_FN, NULL);
+ if (obj && obj->type == ACPI_TYPE_INTEGER) {
+   tablet_mode = obj->integer.value;
+   dev_dbg(device, "read tablet mode: %llu", tablet_mode);
+   input_report_switch(priv->array, SW_TABLET_MODE, tablet_mode? 0:1);
+   input_report_switch(priv->array, SW_DOCK, tablet_mode? 1:0);
+   ACPI_FREE(obj);
+ }
+}
+
 static void intel_button_array_enable(struct device *device, bool enable)
 {
 	struct intel_hid_priv *priv = dev_get_drvdata(device);
@@ -641,6 +665,8 @@ static int intel_hid_probe(struct platfo
 		err = intel_button_array_input_setup(device);
 		if (err)
 			pr_err("Failed to setup Intel 5 button array hotkeys\n");
+    else
+      intel_detect_tablet_mode(&device->dev);
 	}
 
 	/* Setup switches for devices that we know VGBS return correctly */
